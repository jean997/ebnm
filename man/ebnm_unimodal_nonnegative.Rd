% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ebnm_fns.R
\name{ebnm_unimodal_nonnegative}
\alias{ebnm_unimodal_nonnegative}
\title{Solve the EBNM problem using a nonnegative unimodal distribution}
\usage{
ebnm_unimodal_nonnegative(x, s = 1, mode = 0, scale = "estimate",
  g_init = NULL, fix_g = FALSE, output = output_default(),
  control = NULL, ...)
}
\arguments{
\item{x}{A vector of observations. Missing observations (\code{NA}s) are
allowed. If any observations are missing, the corresponding standard
errors should be set to \code{Inf}.}

\item{s}{A vector of standard errors (or a scalar if all are equal).
Standard errors may be infinite, but they may not be exactly zero.
Missing standard errors are not allowed.}

\item{mode}{A scalar specifying the mode of the prior \eqn{g} or
\code{"estimate"} if the mode is to be estimated from the data. (This
functionality has not yet been implemented for
\code{prior_family = "point_laplace"}.)}

\item{scale}{A scalar or vector specifying the scale parameter(s) of the
prior or \code{"estimate"} if the scale parameters are to be estimated
from the data. The precise interpretation of \code{scale} depends on
\code{prior_family}. For normal and point-normal families, it is a scalar
specifying the standard deviation of the normal component. For
\code{prior_family = "point_laplace"}, it is a scalar specifying the scale
parameter of the Laplace component. For other prior families, which are
implemented using the function \code{\link[ashr]{ash}} in package
\code{ashr}, it is a vector specifying the parameter \code{mixsd} to be
passed to \code{ash} (or \code{"estimate"} if the default \code{mixsd}
is to be used).}

\item{g_init}{The prior distribution \eqn{g}. Usually this is left
unspecified (\code{NULL}) and estimated from the data. However, it can be
used in conjuction with \code{fix_g = TRUE} to fix the prior (useful, for
example, to do computations with the "true" \eqn{g} in simulations). If
\code{g_init} is specified but \code{fix_g = FALSE}, \code{g_init}
specifies the initial value of \eqn{g} used during optimization. For
\code{ash} priors, this has the side effect of fixing the \code{mode}
and \code{scale} parameters. If \code{g_init} is supplied, it should be
an object of class \code{\link[ashr]{normalmix}} for prior families
\code{normal}, \code{point_normal}, and \code{normal_scale_mixture};
class \code{\link{laplacemix}} for point-Laplace families; and class
\code{\link[ashr]{unimix}} for \code{unimodal_} families.}

\item{fix_g}{If \code{TRUE}, fix the prior \eqn{g} at \code{g_init} instead
of estimating it.}

\item{output}{A character vector indicating which values are to be returned.
Function \code{output_default()} provides the default return values, while
\code{output_all()} lists all possible return values. See "Value" below.}

\item{control}{A list of control parameters to be passed to the optimization
function. \code{\link[stats]{optimize}} is used for
\code{prior_family = "normal"}, while \code{\link[stats]{nlm}} is used for
point-normal and point-Laplace families. For ash families (including
\code{normal_scale_mixture} and all \code{unimodal_} families),
function \code{\link[mixsqp]{mixsqp}} in package \code{mixsqp} is used
unless otherwise specified.}

\item{...}{Additional parameters. When \code{prior_family = "ash"} or when
a \code{unimodal_} prior is used, these parameters are passed to
function \code{\link[ashr]{ash}} in package \code{ashr}. Otherwise, they
are ignored.}
}
\description{
See \code{\link{ebnm}} for details.
}
